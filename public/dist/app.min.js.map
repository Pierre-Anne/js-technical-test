{"version":3,"sources":["app/app.ts","app/routes.ts","app/home/homeController.ts","app/issue/issueController.ts","app/servives/issueService.ts","app/servives/WS/HttpUtilService.ts","templates.ts"],"names":["jsTechnicalTestApp","angular","module","config","$locationProvider","$stateProvider","$urlRouterProvider","$urlMatcherFactoryProvider","strictMode","state","url","views","container@","templateUrl","controller","controllerAs","otherwise","html5Mode","enabled","HomeController","$state","httpUtilService","issueService","this","issue","owner","repo","prototype","getIssue","requestIssue","then","comments","setIssue","data","requestComment","setIssueComment","go","bind","$inject","IssueController","getIssueComment","users","getIssueUser","IssueService","issueUser","issueModel","push","user","issueCommentModel","setIssueUser","_","each","comment","isUndefined","find","id","service","HttpUtilService","$http","apiUrl","issueUrl","get","run","$templateCache","put"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nvar jsTechnicalTestApp = angular.module('jsTechnicalTestApp', [\n    'ui.router'\n]);\n","'use strict';\n\njsTechnicalTestApp.config(function($locationProvider: ng.ILocationProvider,\n                                  $stateProvider: ng.ui.IStateProvider,\n                                  $urlRouterProvider: ng.ui.IUrlRouterProvider,\n                                  $urlMatcherFactoryProvider: ng.ui.IUrlMatcherFactory) {\n\n    // Make a trailing slash optional for all routes\n    $urlMatcherFactoryProvider.strictMode(false);\n\n    $stateProvider\n        .state('root', {\n            url: '/',\n            views: {\n                'container@': {\n                    templateUrl: 'src/app/home/homeView.html',\n                    controller: 'HomeController',\n                    controllerAs: 'vm'\n                }\n            }\n        })\n        .state('root.issue', {\n            url: 'issue',\n            views: {\n                'container@': {\n                    templateUrl: 'src/app/issue/issueView.html',\n                    controller: 'IssueController',\n                    controllerAs: 'vm'\n                }\n            }\n        });\n\n    $urlRouterProvider.otherwise('/');\n\n    // html5 removes the need for # in URL\n    $locationProvider.html5Mode({\n        enabled: true\n    });\n\n});\n","'use strict';\n/**\n * HomeController is used as controller of the homeView\n */\nclass HomeController {\n\n    public issue: string = '6867';\n    public owner: string = 'nodejs';\n    public repo: string = 'node';\n\n    static $inject = ['$state', 'HttpUtilService', 'IssueService'];\n\n    constructor(private $state: ng.ui.IStateService, private httpUtilService: HttpUtilService, private issueService: IssueService) {\n\n    }\n\n    public getIssue(): void {\n        this.httpUtilService.requestIssue(this.issue, this.owner, this.repo).then(function(comments: any){\n            this.issueService.setIssue(comments.data);\n\n            this.httpUtilService.requestComment(this.issue, this.owner, this.repo).then(function(issue: any){\n                this.issueService.setIssueComment(issue.data);\n                this.$state.go('root.issue');\n            }.bind(this));\n\n        }.bind(this));\n    }\n\n}\n\njsTechnicalTestApp.controller('HomeController', HomeController);\n","'use strict';\r\n/**\r\n * HomeController is used as controller of the homeView\r\n */\r\nclass IssueController {\r\n\r\n    public issue: any;\r\n    public comments: any;\r\n    public users: any;\r\n\r\n    static $inject = ['IssueService'];\r\n\r\n    constructor(private issueService: IssueService) {\r\n        this.issue = issueService.getIssue();\r\n        this.comments = issueService.getIssueComment();\r\n        this.users = issueService.getIssueUser();\r\n    }\r\n\r\n}\r\n\r\njsTechnicalTestApp.controller('IssueController', IssueController);\r\n","'use strict';\r\n/**\r\n * AccountService is used to manage the account\r\n */\r\nclass IssueService {\r\n\r\n    public issueModel: any;\r\n    public issueCommentModel: any;\r\n    public issueUser: Array<any> = [];\r\n\r\n\r\n    //static $inject = [];\r\n    //\r\n    //constructor() {\r\n    //}\r\n\r\n    /**\r\n     * Getters and Setters\r\n     */\r\n\r\n    public getIssue(): any {\r\n        return this.issueModel;\r\n    }\r\n\r\n    public setIssue(issueModel: any): void {\r\n        this.issueModel = issueModel;\r\n        this.issueUser.push(issueModel.user);\r\n    }\r\n\r\n    public getIssueComment(): any {\r\n        return this.issueCommentModel;\r\n    }\r\n\r\n    public setIssueComment(issueCommentModel: any): void {\r\n        this.issueCommentModel = issueCommentModel;\r\n        this.setIssueUser();\r\n    }\r\n\r\n    public setIssueUser(): void{\r\n        _.each(this.issueCommentModel, function(comment: any){\r\n            if(_.isUndefined(_.find(this.issueUser, {id: comment.user.id}))){\r\n                this.issueUser.push(comment.user);\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    public getIssueUser(): any {\r\n        return this.issueUser;\r\n    }\r\n}\r\n\r\njsTechnicalTestApp.service('IssueService', IssueService);\r\n","'use strict';\r\n/**\r\n * This class is used to make the http request\r\n */\r\nclass HttpUtilService {\r\n\r\n\r\n    private apiUrl : string = 'http://api.github.com/repos';\r\n\r\n    //http://api.github.com/repos/nodejs/node/issues/6867\r\n\r\n    static $inject = ['$http'];\r\n\r\n    constructor(private $http:ng.IHttpService) {\r\n        // Retrieve the content of the HomePage\r\n    }\r\n\r\n\r\n    public requestComment(issue: string, owner: string, repo: string): any {\r\n        var issueUrl = this.apiUrl + '/' + owner + '/' + repo + '/issues/' +issue + '/comments';\r\n        return this.$http.get(issueUrl)\r\n    }\r\n\r\n    public requestIssue(issue: string, owner: string, repo: string): any {\r\n        var issueUrl = this.apiUrl + '/' + owner + '/' + repo + '/issues/' +issue;\r\n        return this.$http.get(issueUrl)\r\n    }\r\n\r\n}\r\n\r\njsTechnicalTestApp.service('HttpUtilService', HttpUtilService);\r\n",null],"sourceRoot":"/source/"}